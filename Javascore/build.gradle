apply plugin: 'java'
apply plugin: 'com.bmuschko.izpack'

import org.apache.tools.ant.filters.ReplaceTokens

sourceCompatibility = 1.7
version = '7.3.1'
ext.releaseDate = '2 April 2015'

ext.buildDir = "build"
ext.distDir = "build/distributions"
ext.assembleDir = "build/assemble"
ext.libsDir = "build/libs"
/*
jar {
	archiveName = 'JavaScore.jar'

    manifest {
        attributes 'Implementation-Title': 'JavaScore Regatta Scoring, version ' + version,
                   'Implementation-Version': version,
                   'Main-Class': 'org.gromurph.javascore.JavaScore',
                   'Class-Path' : configurations.runtime.join(' ')
    }
    
    
}
*/
jar {

    archiveName = "JavaScore.jar"

    from {

        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }

        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest {
        attributes 'Main-Class': 'org.gromurph.javascore.JavaScore'
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

repositories {
    maven {
    	url './local-repo'
    }
    mavenCentral()
    jcenter()
}

dependencies {
   compile 'commons-collections:commons-collections:3.2'
   compile 'javax.xml.bind:jaxb-api:2.2.12'
   compile 'javax.help:javahelp:2.0.05'
   compile 'com.toedter:jcalendar:1.4'
   compile 'org.slf4j:slf4j-api:1.7.10'
   compile 'org.apache.logging.log4j:log4j-api:2.1'
   compile 'org.apache.logging.log4j:log4j-core:2.1'
   compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.1'
   compile 'commons-io:commons-io:2.4'
   compile 'commons-net:commons-net:3.3'
   compile 'commons-codec:commons-codec:1.10'
   compile 'jakarta-regexp:jakarta-regexp:1.4'
   compile 'org.apache.httpcomponents:httpclient:4.4'
    
   // testing only 
   testCompile 'junit:junit:4.11'
   testCompile 'org-uispec4j:uispec4j:2.5-SNAPSHOT'
   
   // local repo
   compile 'dbswing:dbswing:0.0'
   compile 'sailing-org:sailingXrr:1.3'
    
   // release packaging
   izpack 'org.codehaus.izpack:izpack-standalone-compiler:4.3.4'

}

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
        classpath 'com.bmuschko:gradle-izpack-plugin:2.0'
    }
}

compileJava.doFirst {
	println "compileJava.doFirst, version: $version, releaseDate: $releaseDate"
	
	file('src/main/java/org/gromurph/javascore/JavaScoreVersion.java').delete()
	copy {
		from 'src/main/izpack'
		into 'src/main/java/org/gromurph/javascore'
		include 'JavaScoreVersion.java.master'
		filter( ReplaceTokens, tokens: [ version: version, releasedate: releaseDate])
		rename 'JavaScoreVersion.java.master', 	'JavaScoreVersion.java'
	}
}

assemble.doLast {

	println "assembleIzpack: VERSION=$version BUILD Date=$releaseDate RELEASEDIR=$distDir"

	new File( libsDir).mkdirs()

	def aDir = new File( assembleDir)
	aDir.delete()
	aDir.mkdirs()
	
    copy {
    	into assembleDir
    	from 'src/main/izpack'
    	include '*.master'
    	rename { String fileName -> fileName.replace('.master', '') }
    	filter( ReplaceTokens, tokens: [ version: version, releasedate: releaseDate])
     }

	copy {
		into assembleDir
		from 'src/main/izpack'
		include '*.*'
		exclude '*.master'
		exclude 'reports'
		exclude 'lib'
	}

	copy {
		into assembleDir
		from libsDir
		include '*.*'
	}
		
	izPackCreateInstaller.execute()
}
    
izpack {
	println "izpack: VERSION=$version BUILD Date=$releaseDate RELEASEDIR=$distDir"

	baseDir = file('build/assemble')
	installFile = file('build/assemble/izpack-javascore-install.xml')
	outputFile = file("build/distributions/Javascore-install-${version}.jar")
	
	appProperties = ['app.group': 'gromurph', 'app.name': 'JavaScore', 'app.title': 'JavaScore sailboat regatta scoring',
                     'app.version': version, 'app.subpath': "javascore-$version"]
	
	
	/*
	def distDirectory = file( distDir)
	distDirectory.delete()
	distDirectory.mkdirs()

	FileCollection cp = files( dir: '/Users/sandygrosvenor/Dropbox/dev/eclipseworkspace/izpack4/lib')
	ant.taskdef( name: 'izpack',
		classpath: cp,
		classname: 'com.izforge.izpack.ant.IzPackTask')

	ant.izpack( 
    	input: '$assembleDir/izpack-javascore-install.xml',
	    output: "$distDir/Javascore-install-${version}.jar",
    	installerType: 'standard',
    	basedir: '$buildDir/assemble',
    	izPackDir: '$izpackDir/' )
	*/
}