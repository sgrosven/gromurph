<!--=======================================================================-->
<!-- JavaScore Ant build script                                            -->
<!--                                                                       -->
<!-- Run "ant -projecthelp" for usage info                                 -->
<!--=======================================================================-->

<project name="Javascore" default="release" basedir=".">
	
	<property name="izpack.dir" value="../izpack4" />
	<taskdef name="izpack" classpath="${izpack.dir}/lib/compiler.jar"
		classname="com.izforge.izpack.ant.IzPackTask"/>
	<tstamp />
 	
    <property name="app.version"	value="7.2.2" />
	<property name="app.builddate" 	value="${DSTAMP}" />

	<!-- Include user-specific properties -->
    <property file="build.properties"/>
    <property file="${user.home}/build.properties"/>
    
	<!-- General properties -->
    <property name="app.label"		value="JavaScore"/>
    <property name="app.name"		value="javascore"/>
    <property name="app.path"		value="/${app.name}"/>
	
	<!-- web site info -->
	<property name="base.url"	value="http://gromurph.org/javascore" />

	
	<!-- Path properties -->
    <property name="build.home"	value="${basedir}/classes"/>
    <property name="docs.home"	value="${basedir}/api"/>
    <property name="src.home"	value="${basedir}/source"/>
    <property name="lib.home"	value="${basedir}/jars"/>
    <property name="test.home"	value="${basedir}/test"/>
	<property name="dist.dir" value = "${basedir}/releasefiles" />
        
	<!-- Compile properties -->
    <property name="compile.debug"			value="true"/>
    <property name="compile.deprecation"	value="false"/>
    <property name="compile.optimize"		value="true"/>
    <property name="compile.source"			value="1.7"/>
  
	<!-- Classpath property -->
    <path id="compile.classpath">
        <fileset dir="${lib.home}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
	
<!-- =================================================================== -->
<!-- ALL Target                                                          -->
<!-- =================================================================== -->
   
	<target 
		name="all" 
		depends="clean,compile"
    	description="Clean build and dist directories, then compile"
	/>

<!-- =================================================================== -->
<!-- Release - builds release files                                      -->
<!-- =================================================================== -->
	
    <target 
    	name="release" 
    	depends="jarcode,jarproperties,jarsource"
        description="release package"
    >
    	<!-- echo out the release info -->
    	<echo message="Release info: VERSION=${app.version} BUILD Date=${app.builddate} RELEASEDIR=${dist.dir}" />
    	
    	<delete file="${dist.dir}/Javascore-install-${app.version}.jar"/>
    	
    	<!-- copy files that need to be in install root directory -->    	
    	<copy todir="${dist.dir}" >
    		<fileset dir="${src.home}" includes="*.*" />  		
    	</copy>
    	
    	<!-- run izpack -->
    	<izpack input="${dist.dir}/izpack-javascore-install.xml"
    		output="${dist.dir}/Javascore-install-${app.version}.jar"
    		installerType="standard" basedir="${dist.dir}"
    		izPackDir="${izpack.dir}/"
    	/>
    	        	
	</target>
			
   
<!-- =================================================================== -->
<!-- Clean Target                                                        -->
<!-- =================================================================== -->
	
    <target 
    	name="clean"
		description="Delete old build and dist directories">
        <delete dir="${build.home}"/>
    </target>   

<!-- =================================================================== -->
<!-- Prepare Target                                                      -->
<!-- =================================================================== -->
	
	<target 
		name="prepare">
		<!-- Create build directories as needed -->
    	<mkdir  dir="${build.home}"/>
	
		<delete >
			<fileset dir="${dist.dir}" includes="*.jar" excludes="javascore*.jar" />
		</delete>
		
	  	<copy	todir="${dist.dir}" >
	    	<fileset dir="${lib.home}" includes="*.jar" excludes="jfcunit*.jar" />  		
	    </copy>

		<copy	tofile="${dist.dir}/izpack-javascore-install.xml"
				file="${dist.dir}/izpack-javascore-install.xml.master"
				overwrite="true" />
			
        <replace file="${dist.dir}/izpack-javascore-install.xml" token="#version#" value="${app.version}" summary="yes" />	
        <replace file="${dist.dir}/izpack-javascore-install.xml" token="#releasedate#" value="${app.builddate}" summary="yes" />

		
		<copy	tofile="${dist.dir}/windows_shortcut_spec.xml"
				file="${dist.dir}/windows_shortcut_spec.xml.master"
				overwrite="true" />			
		<replace file="${dist.dir}/windows_shortcut_spec.xml" token="#version#" value="${app.version}" summary="yes" />	
		
		<copy	tofile="${dist.dir}/unix_shortcut_specification.xml"
				file="${dist.dir}/unix_shortcut_specification.xml.master"
				overwrite="true" />			
		<replace file="${dist.dir}/unix_shortcut_specification.xml" token="#version#" value="${app.version}" summary="yes" />	
		
		
		<copy	tofile="JavaScoreVersion.java"
				file="${dist.dir}/JavaScoreVersion.java.master"
				overwrite="true" />
			
        <replace file="JavaScoreVersion.java" token="#version#" value="${app.version}" summary="yes" />	
        <replace file="JavaScoreVersion.java" token="#releasedate#" value="${app.builddate}" summary="yes" />
	
		<move 	file="JavaScoreVersion.java"
				todir="${src.home}/org/gromurph/javascore"
				overwrite="true" />
			
	</target>
  
<!-- =================================================================== -->
<!-- Compile Target                                                      -->
<!-- =================================================================== -->
	
	<target 
		name="compile" 
		depends="prepare"
   		description="Compile Java sources">

	<!-- Compile Java classes as necessary -->
    	<mkdir dir="${build.home}"/>
	    <javac	
			includeantruntime="false"
	    	destdir="${build.home}"
            debug="${compile.debug}"
			deprecation="${compile.deprecation}"
			optimize="${compile.optimize}"
        	source="${compile.source}" >
			<src path="${src.home}"/>
			<src path="${test.home}"/>
			<classpath refid="compile.classpath"/>
		</javac>

	<!-- Copy application resources -->
    	<copy  todir="${build.home}">
      		<fileset dir="${src.home}" excludes="**/*.java,CVS/**"/>
    	</copy>
	</target>

<!-- =================================================================== -->
<!-- Run Javascore                                                           -->
<!-- =================================================================== -->
	
	<target 
		name="run" 
		depends="compile" 
		description="Runs Javascore in development environment">
		
		<java 
  			classname="org.gromurph.javascore.JavaScore"
			fork="true"
			dir="${basedir}"
			>
  			
			<classpath>
				<pathelement location="${build.home}"/>
				<pathelement location="${basedir}"/>
			  	<path refid="compile.classpath"/>
			</classpath>
		</java>
	</target>

<!-- =================================================================== -->
<!-- Generate the Code JAR file -->
<!-- =================================================================== -->

	<target 
		name="jarcode" 
		depends="compile"
   		description="Creates an executable jar file for JavaScore">
	    
		<mkdir dir="${basedir}" />				
		
		<jar destfile="${dist.dir}/JavaScore.jar" 
			basedir="${basedir}/classes"
			includes="**/*.class images/*.*" 
			excludes="help/*.* **/*Test.*" 
	    	>
			<manifest>
				<attribute name="Main-Class" value="org.gromurph.javascore.JavaScore" />
				<attribute name="Class-Path" value=". javascore_properties.jar commons-codec-1.6.jar commons-io-2.4.jar commons-logging-1.1.1.jar commons.net-3.2.jar dbswing.jar httpclient-4.2.3.jar jaxb-api.jar jaxb-impl.jar jaxb-xjc.jar jcalendar.jar jhall-2.0_02.jar log4j-1.2.17.jar sailingXRR.jar" />
			</manifest>
		</jar>
		
<!--		<signjar keystore="${key.store}" alias="${key.alias}" storepass="${key.storepass}" >
			<fileset dir="." >
				<include name="${dist.dir}/JavaScore.jar" />
			</fileset>
		</signjar>  	
		-->

	</target>

<!-- =================================================================== -->
<!-- Generate the properties jar file for language info					 -->
<!-- =================================================================== -->

	<target 
		name="jarproperties" 
   		description="Creates a jar file for resources used by the javascore code ">

		<jar destfile="${dist.dir}/javascore_properties.jar" >
			
			<fileset dir="${basedir}/classes" 
				includes="**/*.properties"/>				
			<fileset dir="${basedir}/classes" 
				includes="help/*.* help/**/*.*" />
			<fileset dir="${basedir}/classes" 
				includes="template*.html club-logo.jpg" />				
			<fileset dir="${dist.dir}" >
				<filename name="Spring_Sampler.regatta" />				
	    	</fileset>
		</jar>
			<!--
		<signjar keystore="${key.store}" alias="${key.alias}" storepass="${key.storepass}" >
			<fileset dir="." >
				<include name="${dist.dir}/javascore_properties.jar" />
			</fileset>
		</signjar>  	
		-->

	</target>
		  	
<!-- =================================================================== -->
<!-- Signs the jar files that are part of the release -->
<!-- =================================================================== -->
	<target name="signExternalJars" 
		description="Signs stock jars, jhall, dbswing, and calendar">
		
		<signjar keystore="gromurph.ks"
		  	alias="sandy.gromurph.org"
			storepass="Gr0murph!" 
	  		>  	

			<fileset dir="${lib.home}">
				<include name="jhall.jar"/>		  
				<include name="dbswing.jar" />
				<include name="jcalendar.jar" />
			</fileset>					
			
		</signjar>
	</target>
	
<!-- =================================================================== -->
<!-- Generate the Src JAR file -->
<!-- =================================================================== -->
		
	<target 
		name="jarsource" 
		description="Creates a jar file for javascore source code ">
		<jar destfile="${dist.dir}/javascore-src-${app.version}.jar" >
			<fileset dir="${basedir}" 
				includes="source/**/*.* test/**/*.* testregattas/**/*.*" />
	    </jar>

		<!-- <signjar keystore="${key.store}" alias="${key.alias}" storepass="${key.storepass}" >
			<fileset dir="." >
				<include name="${dist.dir}/javascore_src.jar" />
			</fileset>
		</signjar>  	-->
		
	</target>
	 
	  
<!-- =================================================================== -->
<!-- Generate the api documentation jar file 							 -->
<!-- =================================================================== -->

	<target 
		name="jarapi" 
		depends="compile, javadoc"
   		description="Creates a jar file for javadoc javascore code ">
	    
		<jar destfile="${dist.dir}/javascore_api.jar"
    	     basedir="api"
	    />
		<!-- <signjar keystore="${key.store}" alias="${key.alias}" storepass="${key.storepass}" >
			<fileset dir="." >
				<include name="${dist.dir}/javascore_api.jar" />
			</fileset>
		</signjar>  	-->

	</target>
	
	
<!-- =================================================================== -->
<!-- Javadoc Target                                                      -->
<!-- =================================================================== -->

	<target 
		name="javadoc" 
		depends="compile"
   		description="Create Javadoc API documentation">

		<delete dir="${docs.home}"/>
		<mkdir dir="${docs.home}"/>
		<javadoc	
			sourcepath=		"${src.home}"
		    destdir=		"${docs.home}"
			packagenames=	"org.*"
			author=			"true"
	        source=			"5.0"
	        overview=		"${src.home}/overview.html"
			maxmemory=		"128m"
			windowtitle=	"${app.label} API"
			doctitle=		"${app.label} API">
			<classpath refid="compile.classpath"/>
		</javadoc>
	</target>
      
</project>
